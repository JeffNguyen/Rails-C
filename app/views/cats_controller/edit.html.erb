<form action="/cats/<%= @cat.id %>" method="POST">
  <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
  <input type="hidden" name="_method" value="PATCH">

  <label>Name
    <input type="text" name="cat[name]" value="<%= @cat.name %>">
  </label>

  <label>Owner</label>
  <select name="cat[owner_id]">
    <% Human.all.each do |human| %>
      <option value="<%= human.id%>"><%= human.fname %></option>
    <% end %>
  </select>

  <input type="submit">
</form>

<a href="/cats"><< Back to Index</a>

<ul>
  <% if session[:errors] %>
    <% session[:errors].each do |error| %>
      <li><%= error %></li>
    <% end %>
  <% end %>
</ul>

<div style="background-color: #c8c8c8; border-radius: 8px; border: 6px solid #00d2da; box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75); width: 30%; padding: 10px; position: absolute; top: 20px; right: 20px;">
  By including a hidden input field in forms meant to send PATCH and DELETE requests, Lite Rail can accomodate all four HTTP methods, even though only GET and POST are explicitely allowed by the browser.
</div>
